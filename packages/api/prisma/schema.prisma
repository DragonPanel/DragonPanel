// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // superadmin is the absolute master of the entire universe
  // superadmin is immune to any permission or role for he
  // already wields indefeasible power to do anything he pleases
  // on the Dragon Panel. It has been given to him by the Holy Dragon himself.
  superadmin Boolean? @default(false)

  roles       RoleOnUser[]
}

model RolePermission {
  id         String   @id @default(uuid())
  key        String
  // Actions in form of string separated with commas: Read,!Write
  // '!' means disallow 
  actions    String
  assignedAt DateTime @default(now())
  assignedBy String?
  role       Role     @relation(fields: [roleId], references: [id])
  roleId     String

  @@unique([key, roleId], name: "keyrole")
}

model Role {
  id          String           @id @default(uuid())
  displayName String
  name        String           @unique
  permissions RolePermission[]

  createdAt DateTime @default(now())
  createdBy String?

  assignements RoleOnUser[]
}

model RoleOnUser {
  role     Role   @relation(fields: [roleId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  roleId   String
  user     User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId   String

  // Priority - lower number here = higher priority.
  priority Int

  assignedAt DateTime @default(now())
  assignedBy String?

  @@id([roleId, userId])
}

model RevokedJWT {
  id         String    @id @default(uuid())
  hashedJWT  String
  expiration DateTime?
}
